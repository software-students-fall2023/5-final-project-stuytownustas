name: Web App Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # - name: Lint with flake8
      #   run: |
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # - name: Run Tests with Coverage
      #   run: pytest --cov-config=.coveragerc --cov=./web_app/tests --cov-report=xml --cov-report=term-missing

      # - name: Run tests with pytest
      #   env:
      #     PYTHONPATH: ${{ github.workspace }}/web_app/tests
      #   run: |
      #     pytest web_app/tests
      #     python -m coverage run -m pytest web_app/tests
      #     python -m coverage report
      
      - name: Login to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Web-App Docker Image
        run: |
          docker build -f Dockerfile -t lukedocker12/finalproject:latest .
          docker push lukedocker12/finalproject:latest

      # - name: Build and Push MongoDB Docker Image
      #   run: |
      #     docker build -f mongodb/Dockerfile -t capks/pokemonmongodb:latest ./mongodb
      #     docker push capks/pokemonmongodb:latest

      - name: List files in the GitHub Actions workspace
        run: ls -alh $GITHUB_WORKSPACE
        
      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_DROPLET_IP }}
          username: root
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            cd var/www/myapp
            docker-compose pull
            docker-compose down
            docker container prune -f
            docker image prune -f
            docker volume prune -f
            docker-compose up -d
